name: Playwright Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      artifact_id: ${{ steps.fetch_artifact_id.outputs.artifact_id }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install jq
      run: sudo apt-get install jq
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
      env:
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/ 
        retention-days: 30
    - name: Fetch Artifact ID
      id: fetch_artifact_id
      run: |
        ARTIFACTS_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
        AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
        ACCEPT_HEADER="Accept: application/vnd.github.v3+json"
        RESPONSE=$(curl -s -H "${AUTH_HEADER}" -H "${ACCEPT_HEADER}" "${ARTIFACTS_URL}")
        ARTIFACT_ID=$(echo $RESPONSE | jq '.artifacts[0].id')
        echo "Artifact ID: $ARTIFACT_ID"
        echo "::set-output name=artifact_id::$ARTIFACT_ID"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  notify-slack:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Playwright Report Artifact by ID
        run: |
          ARTIFACT_ID=${{ needs.test.outputs.artifact_id }}
          ARTIFACT_DOWNLOAD_URL="https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip"
          AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
          curl -L -o playwright-report.zip -H "${AUTH_HEADER}" "${ARTIFACT_DOWNLOAD_URL}"
          unzip playwright-report.zip -d ./playwright-report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List files for debugging
        run: ls -R ./playwright-report

      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: qa-avengers
          SLACK_COLOR: '#FF0000'
          SLACK_MESSAGE: 'Playwright Test Report: playwright-report/'
          SLACK_TITLE: 'Playwright Test Execution Report'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
